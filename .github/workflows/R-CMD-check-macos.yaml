# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  schedule:
    - cron: 0 0 * * 1 # schedule to run at midnight on Monday each week
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: macOS

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}

    env:
      _R_REMOTES_NO_ERRORS_FROM_WARNINGS_: true
      _R_CHECK_FORCE_SUGGESTS_: false
      _R_CHECK_TIMINGS_: 10
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CI: true
      NOT_CRAN: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-

      - name: Install system dependencies
        run: |
          brew install pkg-config
          brew tap coin-or-tools/coinor
          brew install coin-or-tools/coinor/symphony
          brew install coin-or-tools/coinor/cbc
          brew install proj
          brew install geos
          brew install gdal

      - name: Debug
        run: |
          echo "here1"
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/cbc/lib/pkgconfig
          echo "here2"
          pkg-config --cflags --silence-errors cbc
          echo "here3"
          pkg-config --libs cbc
          echo "here4"

      - name: Install dependencies
        run: |
          options("install.packages.compile.from.source" = "never")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_github("dirkschumacher/rcbc", configure.vars = "INCLUDE_DIR=/usr/local/opt/cbc/include/cbc/coin LIB_DIR=/usr/local/opt/cbc/lib")
          print("here1")
          dir("/usr/local/opt/")
          print("here2")
          dir("/usr/local/opt/cbc")
          print("here3")
          dir("/usr/local/opt/cbc/include")
          print("here4")
          dir("/usr/local/opt/cbc/include/cbc")
          print("here5")
          dir("/usr/local/opt/cbc/include/cbc/coin")
          print("here6")
          dir("/usr/local/opt/cbc/lib")
          print("here7")
          stop("here")
          remotes::install_cran("covr")
          stop("done")
          #remotes::install_bioc("lpsymphony")
        shell: Rscript {0}

      - name: Session information
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: |
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--no-build-vignettes"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
