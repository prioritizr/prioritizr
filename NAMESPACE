# Generated by roxygen2: do not edit by hand

S3method(adjacency_matrix,Raster)
S3method(adjacency_matrix,SpatRaster)
S3method(adjacency_matrix,SpatialLines)
S3method(adjacency_matrix,SpatialPoints)
S3method(adjacency_matrix,SpatialPolygons)
S3method(adjacency_matrix,default)
S3method(adjacency_matrix,sf)
S3method(all_binary,Matrix)
S3method(all_binary,Raster)
S3method(all_binary,SpatRaster)
S3method(all_binary,Spatial)
S3method(all_binary,data.frame)
S3method(all_binary,default)
S3method(all_binary,matrix)
S3method(all_binary,numeric)
S3method(all_binary,sf)
S3method(all_columns_any_finite,Spatial)
S3method(all_columns_any_finite,data.frame)
S3method(all_columns_any_finite,default)
S3method(all_columns_any_finite,matrix)
S3method(all_columns_any_finite,sf)
S3method(all_columns_inherit,Spatial)
S3method(all_columns_inherit,data.frame)
S3method(all_columns_inherit,default)
S3method(all_columns_inherit,sf)
S3method(all_finite,Matrix)
S3method(all_finite,Spatial)
S3method(all_finite,array)
S3method(all_finite,character)
S3method(all_finite,data.frame)
S3method(all_finite,default)
S3method(all_finite,factor)
S3method(all_finite,logical)
S3method(all_finite,matrix)
S3method(all_finite,numeric)
S3method(all_finite,sf)
S3method(all_positive,Matrix)
S3method(all_positive,Raster)
S3method(all_positive,SpatRaster)
S3method(all_positive,Spatial)
S3method(all_positive,ZonesRaster)
S3method(all_positive,ZonesSpatRaster)
S3method(all_positive,data.frame)
S3method(all_positive,default)
S3method(all_positive,matrix)
S3method(all_positive,numeric)
S3method(all_positive,sf)
S3method(all_proportion,Matrix)
S3method(all_proportion,Spatial)
S3method(all_proportion,data.frame)
S3method(all_proportion,default)
S3method(all_proportion,matrix)
S3method(all_proportion,numeric)
S3method(all_proportion,sf)
S3method(any_nonNA,Matrix)
S3method(any_nonNA,Raster)
S3method(any_nonNA,SpatRaster)
S3method(any_nonNA,Spatial)
S3method(any_nonNA,ZonesRaster)
S3method(any_nonNA,ZonesSpatRaster)
S3method(any_nonNA,character)
S3method(any_nonNA,data.frame)
S3method(any_nonNA,default)
S3method(any_nonNA,factor)
S3method(any_nonNA,logical)
S3method(any_nonNA,matrix)
S3method(any_nonNA,numeric)
S3method(any_nonNA,sf)
S3method(any_nonzero,Matrix)
S3method(any_nonzero,Raster)
S3method(any_nonzero,SpatRaster)
S3method(any_nonzero,Spatial)
S3method(any_nonzero,ZonesRaster)
S3method(any_nonzero,ZonesSpatRaster)
S3method(any_nonzero,data.frame)
S3method(any_nonzero,matrix)
S3method(any_nonzero,numeric)
S3method(any_nonzero,sf)
S3method(as.ZonesSpatRaster,ZonesRaster)
S3method(as.list,OptimizationProblem)
S3method(as.list,Zones)
S3method(binary_stack,Raster)
S3method(binary_stack,SpatRaster)
S3method(boundary_matrix,Raster)
S3method(boundary_matrix,SpatRaster)
S3method(boundary_matrix,SpatialLines)
S3method(boundary_matrix,SpatialPoints)
S3method(boundary_matrix,SpatialPolygons)
S3method(boundary_matrix,default)
S3method(boundary_matrix,sf)
S3method(branch_matrix,default)
S3method(branch_matrix,phylo)
S3method(category_layer,Raster)
S3method(category_layer,default)
S3method(category_vector,Spatial)
S3method(category_vector,data.frame)
S3method(category_vector,matrix)
S3method(category_vector,sf)
S3method(compile,ConservationProblem)
S3method(feature_abundances,ConservationProblem)
S3method(feature_names,ConservationProblem)
S3method(feature_names,ZonesCharacter)
S3method(feature_names,ZonesRaster)
S3method(feature_names,ZonesSpatRaster)
S3method(get_crs,Raster)
S3method(get_crs,SpatRaster)
S3method(get_crs,Spatial)
S3method(get_crs,ZonesRaster)
S3method(get_crs,ZonesSpatRaster)
S3method(get_crs,sf)
S3method(is_numeric_values,Matrix)
S3method(is_numeric_values,Raster)
S3method(is_numeric_values,SpatRaster)
S3method(is_numeric_values,Spatial)
S3method(is_numeric_values,data.frame)
S3method(is_numeric_values,default)
S3method(is_numeric_values,matrix)
S3method(is_numeric_values,numeric)
S3method(is_numeric_values,sf)
S3method(marxan_problem,character)
S3method(marxan_problem,data.frame)
S3method(marxan_problem,default)
S3method(number_of_features,ConservationProblem)
S3method(number_of_features,OptimizationProblem)
S3method(number_of_features,ZonesCharacter)
S3method(number_of_features,ZonesRaster)
S3method(number_of_features,ZonesSpatRaster)
S3method(number_of_planning_units,ConservationProblem)
S3method(number_of_planning_units,OptimizationProblem)
S3method(number_of_total_units,ConservationProblem)
S3method(number_of_zones,ConservationProblem)
S3method(number_of_zones,OptimizationProblem)
S3method(number_of_zones,ZonesCharacter)
S3method(number_of_zones,ZonesRaster)
S3method(number_of_zones,ZonesSpatRaster)
S3method(plot,phylo)
S3method(presolve_check,ConservationProblem)
S3method(presolve_check,OptimizationProblem)
S3method(print,ConservationModifier)
S3method(print,ConservationProblem)
S3method(print,OptimizationProblem)
S3method(print,Solver)
S3method(print,Zones)
S3method(proximity_matrix,Raster)
S3method(proximity_matrix,SpatRaster)
S3method(proximity_matrix,SpatialLines)
S3method(proximity_matrix,SpatialPoints)
S3method(proximity_matrix,SpatialPolygons)
S3method(proximity_matrix,default)
S3method(proximity_matrix,sf)
S3method(repr,"NULL")
S3method(repr,ConservationModifier)
S3method(repr,ConservationProblem)
S3method(repr,Matrix)
S3method(repr,bbox)
S3method(repr,character)
S3method(repr,crs)
S3method(repr,dgCMatrix)
S3method(repr,list)
S3method(repr,logical)
S3method(repr,matrix)
S3method(repr,numeric)
S3method(repr,phylo)
S3method(rescale_matrix,Matrix)
S3method(rescale_matrix,array)
S3method(rescale_matrix,matrix)
S3method(simulate_cost,Raster)
S3method(simulate_cost,SpatRaster)
S3method(simulate_data,Raster)
S3method(simulate_data,SpatRaster)
S3method(simulate_species,Raster)
S3method(simulate_species,SpatRaster)
S3method(solve,ConservationProblem)
S3method(summary,ConservationProblem)
S3method(zone_names,ConservationProblem)
S3method(zone_names,ZonesCharacter)
S3method(zone_names,ZonesRaster)
S3method(zone_names,ZonesSpatRaster)
export("%>%")
export("%T>%")
export(add_absolute_targets)
export(add_asym_connectivity_penalties)
export(add_binary_decisions)
export(add_boundary_penalties)
export(add_cbc_solver)
export(add_connected_constraints)
export(add_connectivity_penalties)
export(add_corridor_constraints)
export(add_cplex_solver)
export(add_cuts_portfolio)
export(add_default_portfolio)
export(add_default_solver)
export(add_extra_portfolio)
export(add_feature_weights)
export(add_gap_portfolio)
export(add_gurobi_solver)
export(add_highs_solver)
export(add_linear_constraints)
export(add_linear_penalties)
export(add_locked_in_constraints)
export(add_locked_out_constraints)
export(add_loglinear_targets)
export(add_lpsymphony_solver)
export(add_mandatory_allocation_constraints)
export(add_manual_bounded_constraints)
export(add_manual_locked_constraints)
export(add_manual_targets)
export(add_max_cover_objective)
export(add_max_features_objective)
export(add_max_phylo_div_objective)
export(add_max_phylo_end_objective)
export(add_max_utility_objective)
export(add_min_largest_shortfall_objective)
export(add_min_set_objective)
export(add_min_shortfall_objective)
export(add_neighbor_constraints)
export(add_pool_portfolio)
export(add_proportion_decisions)
export(add_relative_targets)
export(add_rsymphony_solver)
export(add_semicontinuous_decisions)
export(add_shuffle_portfolio)
export(add_top_portfolio)
export(adjacency_matrix)
export(binary_stack)
export(boundary_matrix)
export(branch_matrix)
export(category_layer)
export(category_vector)
export(compile)
export(connected_matrix)
export(connectivity_matrix)
export(distribute_load)
export(eval_asym_connectivity_summary)
export(eval_boundary_summary)
export(eval_connectivity_summary)
export(eval_cost_summary)
export(eval_feature_representation_summary)
export(eval_n_summary)
export(eval_target_coverage_summary)
export(fast_extract)
export(feature_abundances)
export(feature_names)
export(feature_representation)
export(ferrier_score)
export(get_number_of_threads)
export(get_sim_features)
export(get_sim_locked_in_raster)
export(get_sim_locked_out_raster)
export(get_sim_phylogeny)
export(get_sim_pu_lines)
export(get_sim_pu_points)
export(get_sim_pu_polygons)
export(get_sim_pu_raster)
export(get_sim_zones_features)
export(get_sim_zones_pu_polygons)
export(get_sim_zones_pu_raster)
export(intersecting_units)
export(is.parallel)
export(knit_print.ConservationProblem)
export(knit_print.OptimizationProblem)
export(loglinear_interpolation)
export(marxan_boundary_data_to_matrix)
export(marxan_connectivity_data_to_matrix)
export(marxan_problem)
export(ncell)
export(ncol)
export(new_optimization_problem)
export(new_waiver)
export(nrow)
export(number_of_features)
export(number_of_planning_units)
export(number_of_total_units)
export(number_of_zones)
export(optimization_problem)
export(plot)
export(predefined_optimization_problem)
export(presolve_check)
export(problem)
export(proximity_matrix)
export(rarity_weighted_richness)
export(replacement_cost)
export(rescale_matrix)
export(rij_matrix)
export(run_calculations)
export(set_number_of_threads)
export(simulate_cost)
export(simulate_data)
export(simulate_species)
export(solve.ConservationProblem)
export(write_problem)
export(zone_names)
export(zones)
exportMethods(A)
exportMethods(add_absolute_targets)
exportMethods(add_asym_connectivity_penalties)
exportMethods(add_connectivity_penalties)
exportMethods(add_contiguity_constraints)
exportMethods(add_feature_contiguity_constraints)
exportMethods(add_feature_weights)
exportMethods(add_linear_constraints)
exportMethods(add_linear_penalties)
exportMethods(add_locked_in_constraints)
exportMethods(add_locked_out_constraints)
exportMethods(add_manual_bounded_constraints)
exportMethods(add_manual_locked_constraints)
exportMethods(add_manual_targets)
exportMethods(add_neighbor_constraints)
exportMethods(add_relative_targets)
exportMethods(col_ids)
exportMethods(compressed_formulation)
exportMethods(eval_asym_connectivity_summary)
exportMethods(eval_connectivity_summary)
exportMethods(eval_ferrier_importance)
exportMethods(eval_rare_richness_importance)
exportMethods(eval_replacement_importance)
exportMethods(fast_extract)
exportMethods(intersecting_units)
exportMethods(lb)
exportMethods(modelsense)
exportMethods(obj)
exportMethods(problem)
exportMethods(rhs)
exportMethods(rij_matrix)
exportMethods(row_ids)
exportMethods(sense)
exportMethods(ub)
exportMethods(vtype)
importClassesFrom(Matrix,Matrix)
importClassesFrom(Matrix,dgCMatrix)
importClassesFrom(Matrix,dgTMatrix)
importClassesFrom(tibble,tbl_df)
importFrom(ape,plot.phylo)
importFrom(exactextractr,exact_extract)
importFrom(magrittr,"%>%")
importFrom(magrittr,"%T>%")
importMethodsFrom(terra,ncell)
importMethodsFrom(terra,ncol)
importMethodsFrom(terra,nrow)
importMethodsFrom(terra,plot)
useDynLib(prioritizr, .registration = TRUE)
